;; -*- mode: dotspacemacs -*-
;; This file is loaded by Spacemacs at startup.
;; It must be stored in your home directory.

(defun dotspacemacs/layers ()
  "Configuration Layers declaration."
  (setq-default
   ;; List of additional paths where to look for configuration layers.
   ;; Paths must have a trailing slash (ie. `~/.mycontribs/')
   dotspacemacs-configuration-layer-path '("~/spacemacs_conf/")
   ;; List of configuration layers to load. If it is the symbol `all' instead
   ;; of a list then all discovered layers will be installed.
   dotspacemacs-editing-style 'vim
   dotspacemacs-configuration-layers '(
                                       appearance
                                       (git :variables
                                            git-magit-status-fullscreen t
                                            git-enable-github-support t
                                            git-gutter-use-fringe nil)
                                       prodigy
                                       ;; (colors :variables colors-enable-nyan-cat-progress-bar ,(display-graphic-p))
                                       colors
                                       (perspectives :variables
                                                     perspective-enable-persp-projectile t)
                                       edit-with-emacs
                                      (rcirc :variables
                                             rcirc-default-nick "cestdiego"
                                             rcirc-default-user-name "cestdiego"
                                             rcirc-default-full-name "Diego Berrocal"
                                             rcirc-enable-znc-support t)
                                       html
                                       tramp
                                       restclient
                                       ;; Org
                                       org2blog
                                       org-notify
                                       org
                                       ;; Helm
                                       helm
                                       ;; Code Navigation
                                       ecb
                                       presentations
                                       ;; Miscellaneous
                                       ;; webkit
                                       wakatime
                                       ;; Media
                                       bongo
                                       ;; Completings Stuff
                                       slime
                                       ycmd
                                       ;; LaTeX
                                       auctex
                                       ;; Shells
                                       eshell
                                       ;; Lang
                                       ansible
                                       markdown
                                       cp2k
                                       html
                                       c-c++
                                       python
                                       ;; haskell
                                       javascript
                                       ruby
                                       ;; Utils
                                       floobits
                                       utils
                                       xkcd
                                       )
   ;; A list of packages and/or extensions that will not be install and loaded.
   dotspacemacs-excluded-packages '()
   ;; If non-nil spacemacs will delete any orphan packages, i.e. packages that
   ;; are declared in a layer which is not a member of
   ;; the list `dotspacemacs-configuration-layers'
   dotspacemacs-delete-orphan-packages t))

(defun dotspacemacs/init ()
  "Initialization function.
This function is called at the very startup of Spacemacs initialization
before layers configuration."
  ;; This setq-default sexp is an exhaustive list of all the supported
  ;; spacemacs settings.
  (setq-default
   ;; Specify the startup banner. If the value is an integer then the
   ;; banner with the corresponding index is used, if the value is `random'
   ;; then the banner is chosen randomly among the available banners, if
   ;; the value is nil then no banner is displayed.
   ;; List of themes, the first of the list is loaded when spacemacs starts.
   ;; Press <SPC> T n to cycle to the next theme in the list (works great
   ;; with 2 themes variants, one dark and one light)
   dotspacemacs-themes '(zenburn gotham solarized-light leuven)
   ;; If non nil the cursor color matches the state color.
   dotspacemacs-colorize-cursor-according-to-state t
   ;; Default font. `powerline-scale' allows to quickly tweak the mode-line
   ;; size to make separators look not too crappy.
   dotspacemacs-default-font '("Sauce Code Powerline"
                               :size 16
                               :weight normal
                               :width normal
                               :powerline-scale 1.1)
   ;; The leader key
   dotspacemacs-leader-key "SPC"
   ;; Major mode leader key is a shortcut key which is the equivalent of
   ;; pressing `<leader> m`
   dotspacemacs-major-mode-leader-key ","
   ;; The command key used for Evil commands (ex-commands) and
   ;; Emacs commands (M-x).
   ;; By default the command key is `:' so ex-commands are executed like in Vim
   ;; with `:' and Emacs commands are executed with `<leader> :'.
   dotspacemacs-command-key ":"
   ;; Guide-key delay in seconds. The Guide-key is the popup buffer listing
   ;; the commands bound to the current keystrokes.
   dotspacemacs-guide-key-delay 0.4
   ;; If non nil a progress bar is displayed when spacemacs is loading. This
   ;; may increase the boot time on some systems and emacs builds, set it to
   ;; nil ;; to boost the loading time.
   dotspacemacs-loading-progress-bar t
   ;; If non nil the frame is fullscreen when Emacs starts up.
   ;; (Emacs 24.4+ only)
   dotspacemacs-fullscreen-at-startup nil
   ;; If non nil `spacemacs/toggle-fullscreen' will not use native fullscreen.
   ;; Use to disable fullscreen animations in OSX."
   dotspacemacs-fullscreen-use-non-native nil
   ;; If non nil the frame is maximized when Emacs starts up.
   ;; Takes effect only if `dotspacemacs-fullscreen-at-startup' is nil.
   ;; (Emacs 24.4+ only)
   dotspacemacs-maximized-at-startup nil
   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it's active or selected.
   ;; Transparency can be toggled through `toggle-transparency'.
   dotspacemacs-active-transparency 90
   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it's inactive or deselected.
   ;; Transparency can be toggled through `toggle-transparency'.
   dotspacemacs-inactive-transparency 90
   ;; If non nil unicode symbols are displayed in the mode line.
   dotspacemacs-mode-line-unicode-symbols t
   ;; If non nil smooth scrolling (native-scrolling) is enabled. Smooth
   ;; scrolling overrides the default behavior of Emacs which recenters the
   ;; point when it reaches the top or bottom of the screen.
   dotspacemacs-smooth-scrolling t
   ;; If non-nil smartparens-strict-mode will be enabled in programming modes.
   dotspacemacs-smartparens-strict-mode nil
   ;; If non nil advises quit functions to keep server open when quitting.
   dotspacemacs-persistent-server nil
   ;; The default package repository used if no explicit repository has been
   ;; specified with an installed package.
   ;; Not used for now.
   dotspacemacs-default-package-repository nil)

  ;; User initialization goes here

  ;; Lines should be 80 characters wide, not 72
  (setq fill-column 80)

  (when (file-exists-p "~/.cabal/bin")
    (add-to-list 'exec-path "~/.cabal/bin/"))

  (set-face-background 'region "#0f0f0f")
  ;; (when (window-system)
  ;;   (custom-set-faces
  ;;    '(default ((t (:background "#1f1f1f"))))
  ;;    ))

  (eval-after-load 'fringe-mode
    '(progn
       (fringe-mode -1)))
  (set-fringe-mode '(0 . 0))
  (set-face-attribute 'fringe nil :background "#1f1f1f")
  (set-face-attribute 'mode-line nil  :inverse-video nil :box nil)
  (set-face-attribute 'mode-line-inactive nil :box nil)
  (set-face-attribute 'vertical-border nil :foreground "#1f1f1f")
  (setq-default evil-escape-key-sequence "nj")
  (setq delete-by-moving-to-trash t)
  (setq rcirc-server-alist
         '(("freenode"
            :host "irc.berrocal.me"
            :port "1984"
            :auth "cestdiego/freenode"
            :channels ("#emacs"))

           ("geekshed"
            :host "irc.berrocal.me"
            :port "1984"
            :auth "cestdiego/geekshed"
            :channels ("#jupiterbroadcasting"))
           ))

  (setq ycmd-server-command "~/.installed/ycmd/")
  )

(defun dotspacemacs/config ()
  "Configuration function.
 This function is called at the very end of Spacemacs initialization after
layers configuration."

  ;;; SANE DEFAULTS!!
  ;; decent navigation like a good citizen
  (global-set-key (kbd "<C-s-tab>") 'persp-next)
  (global-set-key (kbd "<M-s-tab>") 'persp-prev)
  ;; Don't break lines for me, please
  (setq sp-cancel-autoskip-on-backward-movement nil)

  ;; Use helm-projectile anywhere
  ;; (setq projectile-require-project-root nil)

  ;; UTF-8 please
  (setq locale-coding-system 'utf-8) ; pretty
  (set-terminal-coding-system 'utf-8) ; pretty
  (set-keyboard-coding-system 'utf-8) ; pretty
  (set-selection-coding-system 'utf-8) ; please
  (prefer-coding-system 'utf-8) ; with sugar on top
  (set-language-environment 'utf-8)
  ;; Sentences do not need double spaces to end. Period.
  (set-default 'sentence-end-double-space nil)

  (setq org-startup-folded nil)
  (eval-after-load 'org2blog
    (progn
      (setq org2blog/wp-blog-alist
            '(("astro-fc"
               :url "http://astronomia.uni.edu.pe/xmlrpc.php"
               :username "cestdiego"
               :default-title "Hello World"
               :default-categories ("org2blog" "emacs")
               :tags-as-categories nil)))
      (setq org2blog/wp-confirm-post t)
      ))
  (setq web-mode-enable-current-column-highlight t)

  (add-hook 'doc-view-mode-hook 'auto-revert-mode)

  (defun xah-run-current-file ()
    "Execute the current file.
For example, if the current buffer is the file xx.py, then it'll call 「python xx.py」 in a shell.
The file can be php, perl, python, ruby, javascript, bash, ocaml, vb, elisp.
File suffix is used to determine what program to run.

If the file is modified, ask if you want to save first.

URL `http://ergoemacs.org/emacs/elisp_run_current_file.html'
version 2014-10-28"
    (interactive)
    (let* (
           (ξsuffixMap
            ;; (‹extension› . ‹shell program name›)
            `(
              ("php" . "php")
              ("pl" . "perl")
              ("py" . "python")
              ("py3" . ,(if (string-equal system-type "windows-nt") "c:/Python32/python.exe" "python3"))
              ("rb" . "ruby")
              ("js" . "node") ; node.js
              ("sh" . "bash")
              ("clj" . "java -cp /home/xah/apps/clojure-1.6.0/clojure-1.6.0.jar clojure.main")
              ("ml" . "ocaml")
              ("vbs" . "cscript")
              ;; ("pov" . "/usr/local/bin/povray +R2 +A0.1 +J1.2 +Am2 +Q9 +H480 +W640")
              ))
           (ξfName (buffer-file-name))
           (ξfSuffix (file-name-extension ξfName))
           (ξprogName (cdr (assoc ξfSuffix ξsuffixMap)))
           (ξcmdStr (concat ξprogName " \""   ξfName "\"")))

      (when (buffer-modified-p)
        (when (y-or-n-p "Buffer modified. Do you want to save first?")
          (save-buffer)))


      (if (string-equal ξfSuffix "el") ; special case for emacs lisp
          (load ξfName)
        (if ξprogName
            (progn
              (message "Running…")
              (shell-command ξcmdStr "*xah-run-current-file output*" ))
          (message "No recognized program file suffix for this file.")))))

  (evil-leader/set-key-for-mode 'python-mode
    "mcap" 'xah-run-current-file)

  (defun custom-persp/bbspwm ()
    (interactive)
    (custom-persp "bbspwm"
                  (progn
                    (find-file "~/dotbspwm/.config/sxhkd/sxhkdrc")
                    (split-window-right-and-focus)
                    (find-file "~/dotbspwm/.config/bspwm/bspwmrc")
                    (split-window-below-and-focus)
                    (find-file "~/dotbspwm/.config/bspwm/autostart")
                    )
                  ))
  (evil-leader/set-key
    "Lob" 'custom-persp/bbspwm)
  (setq browse-url-browser-function 'browse-url-generic
        browse-url-generic-program "google-chrome")
  (setq spacemacs/mode-line-battery-time t)
  (defadvice evil-inner-word (around underscore-as-word activate)
    (let ((table (copy-syntax-table (syntax-table))))
      (modify-syntax-entry ?_ "w" table)
      (with-syntax-table table
        ad-do-it)))

  ;; (setq python-shell-virtualenv-path "~/Enthought/Canopy_64bit/User/")
  ;; (setq python-shell-interpreter "~/Enthought/Canopy_64bit/User/bin/python")

  (setenv "PYTHONPATH" "/home/io/horton")
  (setenv "HORTONDATA" "/home/io/horton/data")

  (setq python-shell-virtualenv-path "/usr/")
  (setq python-shell-interpreter "ipython")
  (setq python-shell-interpreter-args "-i --gui=wx")


  (setq eshell-rc-script "~/spacemacs_conf/.eshellrc")
  (setq eshell-path-env exec-path)
  ;; (setq exec-path (append '("/home/io/.local/bin") exec-path))
  ;; (print eshell-path-env)
  ;; (print exec-path)
  (setq powerline-default-separator 'slant)
  (setq vc-follow-symlinks t)

  (setq sublimity-scroll-weight 10
        sublimity-scroll-drift-length 5
        sublimity-map-fraction 0.3
        sublimity-map-size 20
        sublimity-map-text-scale -7
        )
  (setq zone-timer (run-with-idle-timer 120 t 'zone))
  (setq zone-programs [zone-pgm-rotate-LR-lockstep])
  )

;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-ispell-requires 4)
 '(ahs-case-fold-search nil)
 '(ahs-default-range (quote ahs-range-whole-buffer))
 '(ahs-idle-interval 0.25)
 '(ahs-idle-timer 0 t)
 '(ahs-inhibit-face-list nil)
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(anzu-search-threshold 1000)
 '(compilation-message-face (quote default))
 '(cua-global-mark-cursor-color "#2aa198")
 '(cua-normal-cursor-color "#657b83")
 '(cua-overwrite-cursor-color "#b58900")
 '(cua-read-only-cursor-color "#859900")
 '(global-evil-search-highlight-persist t)
 '(highlight-changes-colors (quote ("#d33682" "#6c71c4")))
 '(highlight-symbol-colors
   (--map
    (solarized-color-blend it "#fdf6e3" 0.25)
    (quote
     ("#b58900" "#2aa198" "#dc322f" "#6c71c4" "#859900" "#cb4b16" "#268bd2"))))
 '(highlight-symbol-foreground-color "#586e75")
 '(highlight-tail-colors
   (quote
    (("#eee8d5" . 0)
     ("#B4C342" . 20)
     ("#69CABF" . 30)
     ("#69B7F0" . 50)
     ("#DEB542" . 60)
     ("#F2804F" . 70)
     ("#F771AC" . 85)
     ("#eee8d5" . 100))))
 '(hl-bg-colors
   (quote
    ("#DEB542" "#F2804F" "#FF6E64" "#F771AC" "#9EA0E5" "#69B7F0" "#69CABF" "#B4C342")))
 '(hl-fg-colors
   (quote
    ("#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3")))
 '(if (version< emacs-version "24.4"))
 '(magit-diff-use-overlays nil)
 '(markdown-command "/usr/bin/pandoc")
 '(org-agenda-files
   (quote
    ("~/Dropbox/Org-Notes/personal.org" "~/Dropbox/Org-Notes/ayers.org" "~/Dropbox/Org-Notes/AyersGroup/AyersGroup.org" "~/Dropbox/Org-Notes/main.org")))
 '(paradox-automatically-star t)
 '(paradox-github-token t)
 '(pos-tip-background-color "#eee8d5")
 '(pos-tip-foreground-color "#586e75")
 '(ring-bell-function (quote ignore) t)
 '(smartrep-mode-line-active-bg (solarized-color-blend "#859900" "#eee8d5" 0.2))
 '(weechat-color-list
   (quote
    (unspecified "#fdf6e3" "#eee8d5" "#990A1B" "#dc322f" "#546E00" "#859900" "#7B6000" "#b58900" "#00629D" "#268bd2" "#93115C" "#d33682" "#00736F" "#2aa198" "#657b83" "#839496"))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:foreground "#DCDCCC" :background "#3F3F3F"))))
 '(evil-search-highlight-persist-highlight-face ((t (:background "peru")))))
